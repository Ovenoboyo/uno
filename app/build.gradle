/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'org.beryx.jlink' version '2.23.6'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
}

ext {
    mainClass = 'com.unoapp.uno.Application'
    launcherName = 'uno'
    imageDirPath = "$buildDir/${launcherName}-image"
    imageZipPath = "$buildDir/image-zip/${launcherName}-image.zip"
    installerPath = "installer"
}


application {
    // Define the main class for the application.
    mainClass = 'com.unoapp.uno.Application'
    mainModule = 'mainModule'
}

jar {
    manifest {
        attributes(
                'Main-Class': mainClass
        )
    }
}

jlink {
    imageDir = file(imageDirPath)
    // imageZip = file(imageZipPath)
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher{
        name = launcherName
        noConsole = true
    }
    jpackage  {
        imageOptions = ['--win-console']
        installerOptions = ['--win-console', '--win-menu', '--win-shortcut']
        outputDir = "jpackage/installer"
    }
}

tasks.jlink.doLast {
    copy {
        includeEmptyDirs = false
        from("assets/")
        into("$imageDirPath/bin/assets")
    }
}

tasks.withType( JavaCompile ).configureEach {
    options.forkOptions.jvmArgs.addAll( ['--add-opens', 'jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED'] )
}

javadoc {
    source = sourceSets.main.allJava
}


